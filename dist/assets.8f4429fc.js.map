{"version":3,"sources":["assets/MediaPlayer.js","assets/plugins/AutoPlay.js","assets/plugins/AutoPause.js","assets/index.js"],"names":["MediaPlayer","config","media","el","plugins","_initPuligins","prototype","player","play","pause","muted","value","forEach","plugin","run","togglePlay","paused","mute","unmute","AutoPlay","AutoPause","threshold","handleIntersection","bind","handleVisibilityChange","observer","IntersectionObserver","observe","document","addEventListener","entries","entry","isVisible","intersectionRatio","visibilityState","video","querySelector","playButton","onclick","muteButton","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":";;AGAA;;AACA;;AACA;AHFA,ACAA,SDASA,ACAAmB,QAAT,GDAA,ACAoB,CDAClB,ACAC,MDAtB,EAA6B;AACzB,OAAKC,KAAL,GAAaD,MAAM,CAACE,EAApB;AACA,ACDJgB,ODCSf,CCDD,CAACE,KDCL,GAAeL,CCDnB,CAAmBa,GAAnB,CDCyB,CAACV,CCDD,MDCN,IAAkB,ACDHG,EDC9B,ICDqB,EAAiB;AEG1C,AFFE,IEEI4B,EFFA,CAAC5B,EEEI,GAAGqB,CFFD,CAAClB,KAAZ,CEEoB,CAAC0B,AFFF,aEEP,CAAuB,OAAvB,CAAd;AHAI,AGCJ,AFFI7B,IEEEA,AFFFA,GDCKF,GGCG,AFFF,CAACK,EEEI,GFFX,CEEeV,EFFA,CDCf,GCDA,cEEW,CAAgB;AHA9B,AGCGG,AFFD,EEECA,EAAE,EAAEgC,KADuB;AAE3B/B,EAAAA,EDPEgB,KCOK,EAAE,CAAE,IAAID,iBAAJ,EAAF,EAAkB,IAAIC,kBAAJ,EAAlB;AHAbpB,AGF+B,ADJ3B,ADKFO,CEDa,CAAf,AFCEA,MAAM,CAACC,EDCE,CAACF,CCDV,QDCF,CAAsBD,CELd,YFKR,GAAsC,YAAY;AAAA,AGGlD,ADRQ,ADKP,CAND,GESMgC,UAAU,GAAGT,QAAQ,CAACQ,aAAT,CAAuB,aAAvB,CAAnB;;AHDI,AGEJC,ADRY,MFMF9B,GENOc,CCQP,CAACiB,CHFK,GAAG,ACAJnB,GEEf,ADRY,GCQS,ADRQ,IAAjB;AFONX,AGCe,ADPT,IFMNA,IAAI,CGCiBD,ADPVe,CFML,KGCqB,CAACP,UAAP,CDPf,CCOS,EDPiB,KAAKO,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AFMA,AGCS,ADNT,CCMZ,QDNiBC,IFKC,KAAI,CAAChB,IAAL,EAAN,MELA,GAA8B,KAAKgB,sBAAL,CAA4BD,IAA5B,CAAiC,IAAjC,CAA9B;AFKA,AEJH,KFGU;AAEbd,AGEN,IHFMA,AGEA8B,KHFK,EAAE,GGEG,GAAGX,QAAQ,CAACQ,aAAT,CAAuB,aAAvB,CAAnB;AHFa,aAAM,KAAI,CAAC3B,KAAL,EAAN;AAAA,AGGb8B,KHLmB,KGKT,CAACD,OAAX,GAAqB,YAAM;AHFrBpC,AGGFK,EAAAA,EHHEL,IGGI,CHHC,AGGAA,EHHE,GGGT,CAAaQ,CHHCR,IGGd,CHNe,EGMMK,CDPjBA,KCOuB,CAACW,EDPhB,ICOS,EAArB,GAAuCX,MAAM,CAACU,IAAP,EAAvC;AACH,ADPO,CCKR,UDLaV,MAAL,GAAcA,MAAd;AFIF,AEFE,QFEEG,EEFIe,GFER,GAAY,EEFI,GAAG,IAAIC,oBAAJ,CAAyB,KAAKJ,kBAA9B,EAAmD;AFGpE,AGIR,ADNYD,ICMR,IDNQA,KFEG,IEFM,CFEDnB,CEFG,IFER,AGIQsC,CHJG9B,AEFEW,KFEpB,GGIR,EAAkC;AHH3B,AGIHmB,ADRwE,ECQxEA,GHVe,EEEM,CAAjB,GCQK,CAACC,aAAV,CAAwBC,QAAxB,CAAiC,sCAAjC,EAA2CC,KAA3C,CAAiD,UAAAC,KAAK,EAAI;AACtDC,ADNApB,ICMAoB,EDNApB,KCMO,CAACqB,EDNA,CCMR,ADNSnB,CCMGiB,KAAK,CAACG,ADNlB,CAAiB,KAAKxC,CCMtB,KDNiB,CAAYL,KAA7B;AFEF,AGKD,ADLG0B,GCGJ,GDHIA,EFAElB,KAAJ,CAAUC,AEAA,CAACkB,IFAX,EAAiB,UEAf,CAA0B,kBAA1B,EAA8C,KAAKL,sBAAnD;AFCE,AGKT,ADLI,ECQL,SHRetB,KAAL,CAAWQ,KAAX,GAAmBC,KAAnB;AACH,AGQP;AACA;AHlBmB,AGmBnB,GHnBI,oCEUmBmB,SAAS;AFE5B,AGQJ,ADTQ,OFCC1B,GEDK2B,IFCV,CAAanB,AEDE,GAAGkB,IFClB,CAAqB,EEDI,CAAC,CAAD,CAArB,KFCiBjB,MAAM,EAAI;AAC3BA,AGQR,ADRO,IFACA,MAAM,AEADmB,CFAElB,GAAP,CAAWP,IEAG,EFAd,CEAiBwB,KAAK,CAACE,iBAAN,IAA2B,KAAKZ,SAAlD;AFCF,AGSL,GHXI;AAGH,AGSD,ADTO,CFjBP,SEiBWW,SAAJ,EAAe;ACUtB,ADTQ,aAAKzB,MAAL,CAAYC,IAAZ;AFCRR,AEAQ,OAFD,IFEI,CAACM,CEAE,QFAd,CAAsBE,IAAtB,GAA6B,YAAW;AACpC,AEAI,OFACN,KAAL,CAAWM,AEAFD,IFAT,EEAI,CAAYE,KAAZ;AFCP,AEAO,CFFR;AEGK;AFCLT,WAAW,CAACM,SAAZ,CAAsBG,KAAtB,GAA8B,YAAW;AACrC,OAAKP,KAAL,CAAWO,KAAX;AACH,CAFD,4CEC6B;AACrB,UAAMuB,SAAS,GAAGJ,QAAQ,CAACM,eAAT,KAA6B,SAA/C;AFERlC,WAAW,CAACM,SAAZ,CAAsBS,UAAtB,GAAmC,YAAW;AAC1C,AEFI,MFEA,IEFIiB,CFEC9B,KAAL,CAAWc,EEFX,EAAe,EFEnB,EAAuB;AACrB,AEFM,SFEDR,IAAL,AEFWD,MAAL,CAAYC,IAAZ;AFGP,AEFI,GFAL,IEFI,EFIG,IEFI;AFGT,AEFM,SFEDC,IEFMF,CFEX,KEFM,CAAYE,KAAZ;AFGP,AEFI;AFGN,AEFE,CFJL;;AAQET,WAAW,CAACM,SAAZ,CAAsBW,IAAtB,GAA6B,YAAW;AACtC,OAAKf,KAAL,CAAWQ,KAAX,GAAmB,IAAnB;AACD,CAFD;;AAIAV,WAAW,CAACM,GELCc,MFKb,CAAsBF,MAAtB,GAA+B,YAAW;AACxC,OAAKhB,KAAL,CAAWQ,KAAX,GAAmB,KAAnB;AACD,CAFD;;eAKaV","file":"assets.8f4429fc.js","sourceRoot":"..","sourcesContent":["function MediaPlayer(config) {\r\n    this.media = config.el;\r\n    this.plugins = config.plugins || [];\r\n\r\n    this._initPuligins();\r\n}\r\n\r\nMediaPlayer.prototype._initPuligins = function () {\r\n\r\n    const player = {\r\n      play: () => this.play(),\r\n      pause: () => this.pause(),\r\n      media: this.media,\r\n      get muted() {\r\n        return this.media.muted;\r\n      },\r\n      set muted(value) {\r\n          this.media.muted = value;\r\n      }\r\n    }\r\n\r\n    this.plugins.forEach(plugin => {\r\n        plugin.run(player);\r\n    })\r\n}\r\n    \r\nMediaPlayer.prototype.play = function() {\r\n    this.media.play();\r\n}\r\n\r\nMediaPlayer.prototype.pause = function() {\r\n    this.media.pause();\r\n}\r\n\r\nMediaPlayer.prototype.togglePlay = function() {\r\n    if (this.media.paused) {\r\n      this.play();\r\n    } else {\r\n      this.pause();\r\n    }\r\n  };\r\n\r\n  MediaPlayer.prototype.mute = function() {\r\n    this.media.muted = true;\r\n  }\r\n\r\n  MediaPlayer.prototype.unmute = function() {\r\n    this.media.muted = false;\r\n  }\r\n\r\n\r\nexport default MediaPlayer;","function AutoPlay() {}\r\nAutoPlay.prototype.run = function(player) {\r\n  if (!player.muted) {\r\n    player.muted = true;\r\n  }\r\n  \r\n  player.play();\r\n};\r\n\r\nexport default AutoPlay;\r\n","class AutoPause {\r\n    constructor()\r\n        {\r\n            this.threshold = 0.35;\r\n            this.handleIntersection = this.handleIntersection.bind(this);\r\n            this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\r\n        }\r\n\r\n    run(player) {\r\n        this.player = player;\r\n\r\n        const observer = new IntersectionObserver(this.handleIntersection , {\r\n            threshold: this.threshold,\r\n        })\r\n        observer.observe(this.player.media)\r\n\r\n        document.addEventListener('visibilitychange', this.handleVisibilityChange);\r\n    }\r\n\r\n    handleIntersection(entries) {\r\n        const entry = entries[0];\r\n        \r\n       const isVisible = entry.intersectionRatio >= this.threshold\r\n\r\n       if (isVisible) {\r\n        this.player.play();\r\n       } else {\r\n        this.player.pause();\r\n       }\r\n    }\r\n\r\n    handleVisibilityChange() {\r\n        const isVisible = document.visibilityState === 'visible'\r\n        if (isVisible) {\r\n            this.player.play();\r\n        } else {\r\n            this.player.pause();\r\n        }\r\n    }\r\n}\r\n\r\nexport default AutoPause;\r\n","import MediaPlayer from './MediaPlayer.js';\r\nimport AutoPlay from './plugins/AutoPlay.js';\r\nimport AutoPause from './plugins/AutoPause.js';\r\n\r\nconst video = document.querySelector('video');\r\nconst player = new MediaPlayer({ \r\n    el: video, \r\n    plugins: [ new AutoPlay(), new AutoPause()] \r\n});\r\n\r\nconst playButton = document.querySelector('#playButton');\r\nplayButton.onclick = () => player.togglePlay();\r\n\r\nconst muteButton = document.querySelector('#muteButton');\r\nmuteButton.onclick = () => {\r\n    player.media.muted ? player.unmute() : player.mute()\r\n};\r\n\r\nif ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.register('/sw.js').catch(error => {\r\n        console.log(error.message)\r\n    })\r\n}\r\n\r\n\r\n// let valor = true\r\n// const changeName = () => {\r\n//     let boton = document.getElementById('playButton')\r\n//     valor ? boton.innerText = 'Pause' : boton.innerText = 'Play';\r\n//     valor = !valor;\r\n// }\r\n\r\n// playButton.onclick = () => {\r\n//     player.media.paused ? (player.play(), changeName()) : (player.pause(), changeName())\r\n// }\r\n"]}